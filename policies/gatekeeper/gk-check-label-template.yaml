apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-gatekeeper-check-label-template
  annotations:
    policy.open-cluster-management.io/standards: Mes propres standards
    policy.open-cluster-management.io/categories: Environnements projet XYZ
    policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration
spec:
  remediationAction: inform
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-gatekeeper-check-label-template
      spec:
        remediationAction: inform
        severity: high
        object-templates:

          - complianceType: musthave
            objectDefinition:

              apiVersion: templates.gatekeeper.sh/v1beta1
              kind: ConstraintTemplate
              metadata:
                name: k8srequiredlabels
              spec:
                crd:
                  spec:
                    names:
                      kind: K8sRequiredLabels
                    validation:
                      # Schema for the `parameters` field
                      openAPIV3Schema:
                        properties:
                          labels:
                            type: array
                            items: string
                targets:
                  - target: admission.k8s.gatekeeper.sh
                    rego: |
                      package k8srequiredlabels

                      violation[{"msg": msg, "details": {"missing_labels": missing}}] {
                        provided := {label | input.review.object.metadata.labels[label]}
                        required := {label | label := input.parameters.labels[_]}
                        missing := required - provided
                        count(missing) > 0
                        msg := sprintf("Vous devez mettre le label: %v", [missing])
                      }
